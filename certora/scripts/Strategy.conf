{
    "files": [
        "certora/harness/Aave/AaveV2Token.sol",
        "certora/harness/Aave/incentivesControllerMock.sol:incentivesController",
        "certora/harness/Aave/lendingPoolMock.sol:lendingPool",
        "certora/harness/PriceOracleHarness.sol",
        "certora/harness/SmartVaultHarnessStrategy.sol",
        "certora/harness/Tokens/DummyERC20B.sol",
        "packages/registry/contracts/registry/Registry.sol",
        "packages/smart-vault/contracts/test/samples/TokenMock.sol",
        "packages/smart-vault/contracts/test/samples/WrappedNativeTokenMock.sol"
    ],
    "hashing_length_bound": "10",
    "link": [
        "SmartVaultHarnessStrategy:Token=TokenMock",
        "SmartVaultHarnessStrategy:aToken=AaveV2Token",
        "SmartVaultHarnessStrategy:incentivesController=incentivesController",
        "SmartVaultHarnessStrategy:lendingPool=lendingPool",
        "SmartVaultHarnessStrategy:priceOracle=PriceOracleHarness",
        "SmartVaultHarnessStrategy:wrappedNativeToken=WrappedNativeTokenMock",
        "incentivesController:rewardToken=DummyERC20B"
    ],
    "loop_iter": "2",
    "msg": "mimic Strategy:  ",
    "optimistic_loop": true,
    "packages": [
        "@chainlink=node_modules/@chainlink",
        "@mimic-fi=node_modules/@mimic-fi",
        "@openzeppelin=node_modules/@openzeppelin",
        "@uniswap=node_modules/@uniswap"
    ],
    "path": ".",
    "process": "emv",
    "rule_sanity": "basic",
    "send_only": true,
    "settings": [
        "-assumeUnwindCond",
        "-b=2",
        "-contractRecursionLimit=1",
        "-hashingLengthBound=10",
        "-mediumTimeout=800",
        "-optimisticFallback=true",
        "-ruleSanityChecks=basic"
    ],
    "solc": "solc8.2",
    "staging": "",
    "verify": "SmartVaultHarnessStrategy:certora/specs/Strategy.spec"
}